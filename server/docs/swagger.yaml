definitions:
  dto.ErrorDto:
    properties:
      error:
        type: string
    type: object
  dto.Pagination:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  dto.PathStatistics:
    properties:
      average_latency_ms:
        type: number
      client_error_count:
        type: integer
      path:
        type: string
      request_count:
        type: integer
      server_error_count:
        type: integer
      timestamp:
        type: string
    type: object
  dto.RequestStatistics:
    properties:
      average_latency_ms:
        type: number
      client_error_count:
        type: integer
      request_count:
        type: integer
      requests_per_path:
        items:
          $ref: '#/definitions/dto.PathStatistics'
        type: array
      server_error_count:
        type: integer
      timestamp:
        type: string
    type: object
  dto.RequestsDto:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      latency:
        description: Latency in Milliseconds
        type: integer
      method:
        type: string
      path:
        type: string
      response:
        type: integer
      responseTime:
        type: string
    type: object
  dto.ResDataDto:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.RequestsDto'
        type: array
      pagination:
        $ref: '#/definitions/dto.Pagination'
    type: object
  dto.ServerInfoDto:
    properties:
      build:
        type: string
      buildTimestamp:
        type: string
      commitHash:
        type: string
      version:
        type: string
    type: object
info:
  contact: {}
paths:
  /info:
    get:
      description: return information about the server build, version, etc ...
      produces:
      - application/json
      responses:
        "200":
          description: Information about server
          schema:
            $ref: '#/definitions/dto.ServerInfoDto'
      summary: Get server info
      tags:
      - info
  /requests:
    get:
      consumes:
      - application/json
      description: Get a paginated list of recorded API requests, with filtering and
        sorting.
      parameters:
      - description: Search term for request path
        in: query
        name: search
        type: string
      - description: Filter by HTTP method (e.Example, GET, POST)
        enum:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
        - HEAD
        - OPTION
        - TRACE
        - CONNECT
        in: query
        name: method
        type: string
      - description: Filter by response status code (e.Example, 200, 404)
        in: query
        name: response
        type: integer
      - default: 20
        description: Pagination limit
        in: query
        name: limit
        type: integer
      - description: Pagination offset
        in: query
        name: offset
        type: integer
      - description: Sort by field (created_at or response_time)
        enum:
        - created_at
        - response_time
        - latency
        in: query
        name: sort_by
        type: string
      - description: Sort order (asc or desc)
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResDataDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorDto'
      summary: List API requests
      tags:
      - Requests
  /requests/statistics:
    get:
      consumes:
      - application/json
      description: Calculates statistics like average latency and error counts per
        path, optionally filtered by a time range.
      parameters:
      - description: Start time for filtering (RFC3339 format, e.g., 2023-10-26T00:00:00Z)
        format: date-time
        in: query
        name: start_time
        type: string
      - description: End time for filtering (RFC3339 format, e.g., 2023-10-26T23:59:59Z)
        format: date-time
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Aggregated statistics per path
          schema:
            $ref: '#/definitions/dto.RequestStatistics'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorDto'
      summary: Get request statistics
      tags:
      - Requests
  /requests/statistics/ws:
    get:
      description: Web socket
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
      summary: web socket for streaming chart data
      tags:
      - chart
swagger: "2.0"
