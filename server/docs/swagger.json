{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/info": {
            "get": {
                "description": "return information about the server build, version, etc ...",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "info"
                ],
                "summary": "Get server info",
                "responses": {
                    "200": {
                        "description": "Information about server",
                        "schema": {
                            "$ref": "#/definitions/dto.ServerInfoDto"
                        }
                    }
                }
            }
        },
        "/requests": {
            "get": {
                "description": "Get a paginated list of recorded API requests, with filtering and sorting.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Requests"
                ],
                "summary": "List API requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term for request path",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH",
                            "HEAD",
                            "OPTION",
                            "TRACE",
                            "CONNECT"
                        ],
                        "type": "string",
                        "description": "Filter by HTTP method (e.Example, GET, POST)",
                        "name": "method",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by response status code (e.Example, 200, 404)",
                        "name": "response",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created_at",
                            "response_time",
                            "latency"
                        ],
                        "type": "string",
                        "description": "Sort by field (created_at or response_time)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResDataDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDto"
                        }
                    }
                }
            }
        },
        "/requests/statistics": {
            "get": {
                "description": "Calculates statistics like average latency and error counts per path, optionally filtered by a time range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Requests"
                ],
                "summary": "Get request statistics",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time for filtering (RFC3339 format, e.g., 2023-10-26T00:00:00Z)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "End time for filtering (RFC3339 format, e.g., 2023-10-26T23:59:59Z)",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated statistics per path",
                        "schema": {
                            "$ref": "#/definitions/dto.RequestStatistics"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDto"
                        }
                    }
                }
            }
        },
        "/requests/statistics/ws": {
            "get": {
                "description": "Web socket",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chart"
                ],
                "summary": "web socket for streaming chart data",
                "responses": {
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorDto": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "dto.Pagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.PathStatistics": {
            "type": "object",
            "properties": {
                "average_latency_ms": {
                    "type": "number"
                },
                "client_error_count": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "request_count": {
                    "type": "integer"
                },
                "server_error_count": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.RequestStatistics": {
            "type": "object",
            "properties": {
                "average_latency_ms": {
                    "type": "number"
                },
                "client_error_count": {
                    "type": "integer"
                },
                "request_count": {
                    "type": "integer"
                },
                "requests_per_path": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PathStatistics"
                    }
                },
                "server_error_count": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.RequestsDto": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latency": {
                    "description": "Latency in Milliseconds",
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "response": {
                    "type": "integer"
                },
                "responseTime": {
                    "type": "string"
                }
            }
        },
        "dto.ResDataDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RequestsDto"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                }
            }
        },
        "dto.ServerInfoDto": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "string"
                },
                "buildTimestamp": {
                    "type": "string"
                },
                "commitHash": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    }
}